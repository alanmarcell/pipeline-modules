image: node:latest

stages:
  - code_quality
  - test
  - sonarqube
  - build
  - deploy

.artifactory-npm-config:
  before_script:
    - export NODE_OPTIONS=--openssl-legacy-provider
    - npm config set registry $ARTIFACTORY_NPM_REGISTRY
    - npm config set -- '_auth' "$ARTIFACTORY_AUTH"
    - npm config set -- 'email' "$ARTIFACTORY_EMAIL"
    - npm config set -- 'always-auth' "true"
    - yarn install

cache:
  paths:
    - node_modules/

lint:
  stage: code_quality
  extends: .artifactory-npm-config
  script: yarn lint

test:
  stage: test
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  extends: .artifactory-npm-config
  script: yarn test
  artifacts:
    paths:
      - coverage

sonarqube:
  stage: sonarqube
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  dependencies:
    - test
  allow_failure: true
  script:
    - sonar-scanner

# DEV
build:dev:
  stage: build
  except:
    - main
    - sbx
    - stg
  variables:
    API_URL: $AQUARIO_API_URL_DEV
  extends: .artifactory-npm-config
  script:
    - yarn dev
  artifacts:
    paths:
      - dist/

deploy:dev:
  stage: deploy
  image: mcr.microsoft.com/azure-cli
  only:
    - dev
  dependencies:
    - build:dev
  script:
    - az storage blob delete-batch -s "\$web" --connection-string $AZURE_STORAGE_DEV
    - az storage blob upload-batch -d "\$web" -s dist --connection-string $AZURE_STORAGE_DEV
    - az login --service-principal --username $AZURE_FRONT_DOOR_APP_ID --password $AZURE_FRONT_DOOR_SECRET --tenant $AZURE_TENANT_ID
    - az extension add --name front-door
    - az network front-door purge-endpoint -g $AZURE_NETWORK_RG_DEV -n $AZURE_FRONT_DOOR_NAME_DEV --content-paths "/*"

# STG
build:stg:
  stage: build
  only:
    - stg
  variables:
    API_URL: $AQUARIO_API_URL_STG
  extends: .artifactory-npm-config
  script:
    - yarn dev
  artifacts:
    paths:
      - dist/

deploy:stg:
  stage: deploy
  image: mcr.microsoft.com/azure-cli
  only:
    - stg
  dependencies:
    - build:stg
  script:
    - az storage blob delete-batch -s "\$web" --connection-string $AZURE_STORAGE_STG
    - az storage blob upload-batch -d "\$web" -s dist --connection-string $AZURE_STORAGE_STG
    - az login --service-principal --username $AZURE_FRONT_DOOR_APP_ID --password $AZURE_FRONT_DOOR_SECRET --tenant $AZURE_TENANT_ID
    - az extension add --name front-door
    - az network front-door purge-endpoint -g $AZURE_NETWORK_RG_STG -n $AZURE_FRONT_DOOR_NAME_STG --content-paths "/*"

# SBX
build:sbx:
  stage: build
  only:
    - sbx
  variables:
    API_URL: $AQUARIO_API_URL_SBX
  extends: .artifactory-npm-config
  script:
    - yarn build
  artifacts:
    paths:
      - dist/

deploy:sbx:
  stage: deploy
  image: mcr.microsoft.com/azure-cli
  only:
    - sbx
  dependencies:
    - build:sbx
  script:
    - az storage blob delete-batch -s "\$web" --connection-string $AZURE_STORAGE_SBX
    - az storage blob upload-batch -d "\$web" -s dist --connection-string $AZURE_STORAGE_SBX
    - az login --service-principal --username $AZURE_FRONT_DOOR_APP_ID --password $AZURE_FRONT_DOOR_SECRET --tenant $AZURE_TENANT_ID
    - az extension add --name front-door
    - az network front-door purge-endpoint -g $AZURE_NETWORK_RG_SBX -n $AZURE_FRONT_DOOR_NAME_SBX --content-paths "/*"
