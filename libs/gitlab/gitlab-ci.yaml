image: node:latest

stages:
  - code_quality
  - test
  - sonarqube
  - build
  - deploy

.artifactory-npm-config:
  before_script:
    - npm config set registry $ARTIFACTORY_NPM_REGISTRY
    - npm config set -- '_auth' "$ARTIFACTORY_AUTH"
    - npm config set -- 'email' "$ARTIFACTORY_EMAIL"
    - npm config set -- 'always-auth' "true"
    - yarn install

.artifactory-install:
  before_script:
    - export BUILD_NAME=$(node -p "require('./package.json').name")
    - export BUILD_VERSION=$(node -p "require('./package.json').version")
    - curl -fL https://getcli.jfrog.io | sh
    - ./jfrog config add --artifactory-url=$ARTIFACTORY_URL --user=$ARTIFACTORY_USER --password=$ARTIFACTORY_PASSWORD --interactive=false
    - ./jfrog c show

lint:
  stage: code_quality
  extends: .artifactory-npm-config
  script: yarn lint

audit:
  stage: code_quality
  extends: .artifactory-npm-config
  script: yarn audit --audit-level=low

test:
  stage: test
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  extends: .artifactory-npm-config
  script: yarn test
  artifacts:
    paths:
      - coverage

sonarqube:
  stage: sonarqube
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  dependencies:
    - test
  script:
    - sonar-scanner

build:
  stage: build
  extends: .artifactory-npm-config
  script: yarn build
  artifacts:
    paths:
      - dist/

deploy:
  stage: deploy
  only:
    - main
  dependencies:
    - build
  extends: .artifactory-install
  script:
    - ./jfrog rt npm-install $ARTIFACTORY_NPM_REPOSITORY --build-name=$BUILD_NAME --build-number=$BUILD_VERSION
    - ./jfrog rt bce $BUILD_NAME $BUILD_VERSION
    - ./jfrog rt npm-publish $ARTIFACTORY_NPM_REPOSITORY --build-name=$BUILD_NAME --build-number=$BUILD_VERSION
