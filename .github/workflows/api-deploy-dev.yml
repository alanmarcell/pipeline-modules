name: api-deploy-dev

on:
  workflow_call:

jobs:
  deploy-dev:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    container: f3capital/aquario:latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    env:
      AZURE_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
      AZURE_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
      AZURE_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID_DEV}}
      AZURE_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET_DEV}}
      AZURE_REGION: ${{secrets.AZURE_REGION_DEV}}
      AZURE_STAGE: ${{secrets.AZURE_STAGE_DEV}}
      AZURE_RESOURCE_GROUP: ${{secrets.AZURE_RESOURCE_GROUP_DEV}}

      APPINSIGHTS_INSTRUMENTATIONKEY: ${{secrets.APPINSIGHTS_INSTRUMENTATIONKEY_DEV}}
      
      DATABASE_HOST: ${{secrets.DATABASE_HOST_DEV}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME_DEV}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD_DEV}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME_DEV}}
      
      KEYCLOAK_URL: ${{secrets.KEYCLOAK_URL_DEV}}
      KEYCLOAK_USERNAME_ADMIN: ${{secrets.KEYCLOAK_USERNAME_ADMIN_DEV}}
      KEYCLOAK_PASSWORD_ADMIN: ${{secrets.KEYCLOAK_PASSWORD_ADMIN_DEV}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          
      - name: Install
        run: |
          npm config set registry ${{secrets.ARTIFACTORY_NPM_REGISTRY}}
          npm config set -- '_auth' "${{secrets.ARTIFACTORY_AUTH}}"
          npm config set -- 'email' "${{secrets.ARTIFACTORY_EMAIL}}"
          npm config set -- 'always-auth' "true"
          yarn install
      
      - name: Development Deploy 
        run: |
          export APP_NAME=$(node -p "require('./package.json').name")
          sls package
          az login --service-principal --username ${{secrets.AZURE_FUNCTIONS_APP_ID}} --password ${{secrets.AZURE_FUNCTIONS_SECRET}} --tenant ${{secrets.AZURE_TENANT_ID}}
          az functionapp deployment source config-zip -g ${{secrets.AZURE_RESOURCE_GROUP_DEV}} -n aquario-eus2-dev-$APP_NAME --src .serverless/$APP_NAME.zip
          sls deploy
          az functionapp deployment source config-zip -g ${{secrets.AZURE_RESOURCE_GROUP_DEV}} -n aquario-eus2-dev-$APP_NAME --src .serverless/$APP_NAME.zip

